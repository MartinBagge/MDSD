/**
 * generated by Xtext 2.10.0
 */
package master.mdsd.game.impl;

import java.util.Collection;

import master.mdsd.game.Attribute;
import master.mdsd.game.Bullet;
import master.mdsd.game.GamePackage;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Bullet</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link master.mdsd.game.impl.BulletImpl#getBulletRef <em>Bullet Ref</em>}</li>
 *   <li>{@link master.mdsd.game.impl.BulletImpl#getAttributesBullet <em>Attributes Bullet</em>}</li>
 * </ul>
 *
 * @generated
 */
public class BulletImpl extends BehaviourImpl implements Bullet
{
  /**
   * The cached value of the '{@link #getBulletRef() <em>Bullet Ref</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBulletRef()
   * @generated
   * @ordered
   */
  protected Bullet bulletRef;

  /**
   * The cached value of the '{@link #getAttributesBullet() <em>Attributes Bullet</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAttributesBullet()
   * @generated
   * @ordered
   */
  protected EList<Attribute> attributesBullet;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected BulletImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return GamePackage.Literals.BULLET;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Bullet getBulletRef()
  {
    if (bulletRef != null && bulletRef.eIsProxy())
    {
      InternalEObject oldBulletRef = (InternalEObject)bulletRef;
      bulletRef = (Bullet)eResolveProxy(oldBulletRef);
      if (bulletRef != oldBulletRef)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, GamePackage.BULLET__BULLET_REF, oldBulletRef, bulletRef));
      }
    }
    return bulletRef;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Bullet basicGetBulletRef()
  {
    return bulletRef;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setBulletRef(Bullet newBulletRef)
  {
    Bullet oldBulletRef = bulletRef;
    bulletRef = newBulletRef;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GamePackage.BULLET__BULLET_REF, oldBulletRef, bulletRef));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Attribute> getAttributesBullet()
  {
    if (attributesBullet == null)
    {
      attributesBullet = new EObjectContainmentEList<Attribute>(Attribute.class, this, GamePackage.BULLET__ATTRIBUTES_BULLET);
    }
    return attributesBullet;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case GamePackage.BULLET__ATTRIBUTES_BULLET:
        return ((InternalEList<?>)getAttributesBullet()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case GamePackage.BULLET__BULLET_REF:
        if (resolve) return getBulletRef();
        return basicGetBulletRef();
      case GamePackage.BULLET__ATTRIBUTES_BULLET:
        return getAttributesBullet();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case GamePackage.BULLET__BULLET_REF:
        setBulletRef((Bullet)newValue);
        return;
      case GamePackage.BULLET__ATTRIBUTES_BULLET:
        getAttributesBullet().clear();
        getAttributesBullet().addAll((Collection<? extends Attribute>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case GamePackage.BULLET__BULLET_REF:
        setBulletRef((Bullet)null);
        return;
      case GamePackage.BULLET__ATTRIBUTES_BULLET:
        getAttributesBullet().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case GamePackage.BULLET__BULLET_REF:
        return bulletRef != null;
      case GamePackage.BULLET__ATTRIBUTES_BULLET:
        return attributesBullet != null && !attributesBullet.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //BulletImpl
