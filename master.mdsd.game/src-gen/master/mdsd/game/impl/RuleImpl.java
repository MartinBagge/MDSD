/**
 * generated by Xtext 2.10.0
 */
package master.mdsd.game.impl;

import master.mdsd.game.Action;
import master.mdsd.game.GamePackage;
import master.mdsd.game.Rule;
import master.mdsd.game.RuleSetup;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Rule</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link master.mdsd.game.impl.RuleImpl#getRuleSetup <em>Rule Setup</em>}</li>
 *   <li>{@link master.mdsd.game.impl.RuleImpl#getToDoAction <em>To Do Action</em>}</li>
 * </ul>
 *
 * @generated
 */
public class RuleImpl extends MinimalEObjectImpl.Container implements Rule
{
  /**
   * The cached value of the '{@link #getRuleSetup() <em>Rule Setup</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRuleSetup()
   * @generated
   * @ordered
   */
  protected RuleSetup ruleSetup;

  /**
   * The cached value of the '{@link #getToDoAction() <em>To Do Action</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getToDoAction()
   * @generated
   * @ordered
   */
  protected Action toDoAction;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected RuleImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return GamePackage.Literals.RULE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public RuleSetup getRuleSetup()
  {
    return ruleSetup;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetRuleSetup(RuleSetup newRuleSetup, NotificationChain msgs)
  {
    RuleSetup oldRuleSetup = ruleSetup;
    ruleSetup = newRuleSetup;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GamePackage.RULE__RULE_SETUP, oldRuleSetup, newRuleSetup);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setRuleSetup(RuleSetup newRuleSetup)
  {
    if (newRuleSetup != ruleSetup)
    {
      NotificationChain msgs = null;
      if (ruleSetup != null)
        msgs = ((InternalEObject)ruleSetup).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GamePackage.RULE__RULE_SETUP, null, msgs);
      if (newRuleSetup != null)
        msgs = ((InternalEObject)newRuleSetup).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GamePackage.RULE__RULE_SETUP, null, msgs);
      msgs = basicSetRuleSetup(newRuleSetup, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GamePackage.RULE__RULE_SETUP, newRuleSetup, newRuleSetup));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Action getToDoAction()
  {
    return toDoAction;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetToDoAction(Action newToDoAction, NotificationChain msgs)
  {
    Action oldToDoAction = toDoAction;
    toDoAction = newToDoAction;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GamePackage.RULE__TO_DO_ACTION, oldToDoAction, newToDoAction);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setToDoAction(Action newToDoAction)
  {
    if (newToDoAction != toDoAction)
    {
      NotificationChain msgs = null;
      if (toDoAction != null)
        msgs = ((InternalEObject)toDoAction).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GamePackage.RULE__TO_DO_ACTION, null, msgs);
      if (newToDoAction != null)
        msgs = ((InternalEObject)newToDoAction).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GamePackage.RULE__TO_DO_ACTION, null, msgs);
      msgs = basicSetToDoAction(newToDoAction, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GamePackage.RULE__TO_DO_ACTION, newToDoAction, newToDoAction));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case GamePackage.RULE__RULE_SETUP:
        return basicSetRuleSetup(null, msgs);
      case GamePackage.RULE__TO_DO_ACTION:
        return basicSetToDoAction(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case GamePackage.RULE__RULE_SETUP:
        return getRuleSetup();
      case GamePackage.RULE__TO_DO_ACTION:
        return getToDoAction();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case GamePackage.RULE__RULE_SETUP:
        setRuleSetup((RuleSetup)newValue);
        return;
      case GamePackage.RULE__TO_DO_ACTION:
        setToDoAction((Action)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case GamePackage.RULE__RULE_SETUP:
        setRuleSetup((RuleSetup)null);
        return;
      case GamePackage.RULE__TO_DO_ACTION:
        setToDoAction((Action)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case GamePackage.RULE__RULE_SETUP:
        return ruleSetup != null;
      case GamePackage.RULE__TO_DO_ACTION:
        return toDoAction != null;
    }
    return super.eIsSet(featureID);
  }

} //RuleImpl
