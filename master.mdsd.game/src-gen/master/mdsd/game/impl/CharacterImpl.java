/**
 * generated by Xtext 2.10.0
 */
package master.mdsd.game.impl;

import java.util.Collection;

import master.mdsd.game.Attribute;
import master.mdsd.game.CharType;
import master.mdsd.game.GamePackage;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Character</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link master.mdsd.game.impl.CharacterImpl#getCharId <em>Char Id</em>}</li>
 *   <li>{@link master.mdsd.game.impl.CharacterImpl#getAtt <em>Att</em>}</li>
 * </ul>
 *
 * @generated
 */
public class CharacterImpl extends DynamicEntityImpl implements master.mdsd.game.Character
{
  /**
   * The cached value of the '{@link #getCharId() <em>Char Id</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCharId()
   * @generated
   * @ordered
   */
  protected CharType charId;

  /**
   * The cached value of the '{@link #getAtt() <em>Att</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAtt()
   * @generated
   * @ordered
   */
  protected EList<Attribute> att;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected CharacterImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return GamePackage.Literals.CHARACTER;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public CharType getCharId()
  {
    return charId;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetCharId(CharType newCharId, NotificationChain msgs)
  {
    CharType oldCharId = charId;
    charId = newCharId;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GamePackage.CHARACTER__CHAR_ID, oldCharId, newCharId);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setCharId(CharType newCharId)
  {
    if (newCharId != charId)
    {
      NotificationChain msgs = null;
      if (charId != null)
        msgs = ((InternalEObject)charId).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GamePackage.CHARACTER__CHAR_ID, null, msgs);
      if (newCharId != null)
        msgs = ((InternalEObject)newCharId).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GamePackage.CHARACTER__CHAR_ID, null, msgs);
      msgs = basicSetCharId(newCharId, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GamePackage.CHARACTER__CHAR_ID, newCharId, newCharId));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Attribute> getAtt()
  {
    if (att == null)
    {
      att = new EObjectContainmentEList<Attribute>(Attribute.class, this, GamePackage.CHARACTER__ATT);
    }
    return att;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case GamePackage.CHARACTER__CHAR_ID:
        return basicSetCharId(null, msgs);
      case GamePackage.CHARACTER__ATT:
        return ((InternalEList<?>)getAtt()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case GamePackage.CHARACTER__CHAR_ID:
        return getCharId();
      case GamePackage.CHARACTER__ATT:
        return getAtt();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case GamePackage.CHARACTER__CHAR_ID:
        setCharId((CharType)newValue);
        return;
      case GamePackage.CHARACTER__ATT:
        getAtt().clear();
        getAtt().addAll((Collection<? extends Attribute>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case GamePackage.CHARACTER__CHAR_ID:
        setCharId((CharType)null);
        return;
      case GamePackage.CHARACTER__ATT:
        getAtt().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case GamePackage.CHARACTER__CHAR_ID:
        return charId != null;
      case GamePackage.CHARACTER__ATT:
        return att != null && !att.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //CharacterImpl
