/**
 * generated by Xtext 2.10.0
 */
package master.mdsd.game.impl;

import java.util.Collection;

import master.mdsd.game.Behaviour;
import master.mdsd.game.DynamicEntity;
import master.mdsd.game.GamePackage;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Dynamic Entity</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link master.mdsd.game.impl.DynamicEntityImpl#getEntityid <em>Entityid</em>}</li>
 *   <li>{@link master.mdsd.game.impl.DynamicEntityImpl#getCharacter <em>Character</em>}</li>
 *   <li>{@link master.mdsd.game.impl.DynamicEntityImpl#getObject <em>Object</em>}</li>
 *   <li>{@link master.mdsd.game.impl.DynamicEntityImpl#getBehaviour <em>Behaviour</em>}</li>
 * </ul>
 *
 * @generated
 */
public class DynamicEntityImpl extends EntityImpl implements DynamicEntity
{
  /**
   * The default value of the '{@link #getEntityid() <em>Entityid</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEntityid()
   * @generated
   * @ordered
   */
  protected static final String ENTITYID_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getEntityid() <em>Entityid</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEntityid()
   * @generated
   * @ordered
   */
  protected String entityid = ENTITYID_EDEFAULT;

  /**
   * The cached value of the '{@link #getCharacter() <em>Character</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCharacter()
   * @generated
   * @ordered
   */
  protected EList<master.mdsd.game.Character> character;

  /**
   * The cached value of the '{@link #getObject() <em>Object</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getObject()
   * @generated
   * @ordered
   */
  protected EList<master.mdsd.game.Object> object;

  /**
   * The cached value of the '{@link #getBehaviour() <em>Behaviour</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBehaviour()
   * @generated
   * @ordered
   */
  protected EList<Behaviour> behaviour;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected DynamicEntityImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return GamePackage.Literals.DYNAMIC_ENTITY;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getEntityid()
  {
    return entityid;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setEntityid(String newEntityid)
  {
    String oldEntityid = entityid;
    entityid = newEntityid;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GamePackage.DYNAMIC_ENTITY__ENTITYID, oldEntityid, entityid));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<master.mdsd.game.Character> getCharacter()
  {
    if (character == null)
    {
      character = new EObjectContainmentEList<master.mdsd.game.Character>(master.mdsd.game.Character.class, this, GamePackage.DYNAMIC_ENTITY__CHARACTER);
    }
    return character;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<master.mdsd.game.Object> getObject()
  {
    if (object == null)
    {
      object = new EObjectContainmentEList<master.mdsd.game.Object>(master.mdsd.game.Object.class, this, GamePackage.DYNAMIC_ENTITY__OBJECT);
    }
    return object;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Behaviour> getBehaviour()
  {
    if (behaviour == null)
    {
      behaviour = new EObjectContainmentEList<Behaviour>(Behaviour.class, this, GamePackage.DYNAMIC_ENTITY__BEHAVIOUR);
    }
    return behaviour;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case GamePackage.DYNAMIC_ENTITY__CHARACTER:
        return ((InternalEList<?>)getCharacter()).basicRemove(otherEnd, msgs);
      case GamePackage.DYNAMIC_ENTITY__OBJECT:
        return ((InternalEList<?>)getObject()).basicRemove(otherEnd, msgs);
      case GamePackage.DYNAMIC_ENTITY__BEHAVIOUR:
        return ((InternalEList<?>)getBehaviour()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case GamePackage.DYNAMIC_ENTITY__ENTITYID:
        return getEntityid();
      case GamePackage.DYNAMIC_ENTITY__CHARACTER:
        return getCharacter();
      case GamePackage.DYNAMIC_ENTITY__OBJECT:
        return getObject();
      case GamePackage.DYNAMIC_ENTITY__BEHAVIOUR:
        return getBehaviour();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case GamePackage.DYNAMIC_ENTITY__ENTITYID:
        setEntityid((String)newValue);
        return;
      case GamePackage.DYNAMIC_ENTITY__CHARACTER:
        getCharacter().clear();
        getCharacter().addAll((Collection<? extends master.mdsd.game.Character>)newValue);
        return;
      case GamePackage.DYNAMIC_ENTITY__OBJECT:
        getObject().clear();
        getObject().addAll((Collection<? extends master.mdsd.game.Object>)newValue);
        return;
      case GamePackage.DYNAMIC_ENTITY__BEHAVIOUR:
        getBehaviour().clear();
        getBehaviour().addAll((Collection<? extends Behaviour>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case GamePackage.DYNAMIC_ENTITY__ENTITYID:
        setEntityid(ENTITYID_EDEFAULT);
        return;
      case GamePackage.DYNAMIC_ENTITY__CHARACTER:
        getCharacter().clear();
        return;
      case GamePackage.DYNAMIC_ENTITY__OBJECT:
        getObject().clear();
        return;
      case GamePackage.DYNAMIC_ENTITY__BEHAVIOUR:
        getBehaviour().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case GamePackage.DYNAMIC_ENTITY__ENTITYID:
        return ENTITYID_EDEFAULT == null ? entityid != null : !ENTITYID_EDEFAULT.equals(entityid);
      case GamePackage.DYNAMIC_ENTITY__CHARACTER:
        return character != null && !character.isEmpty();
      case GamePackage.DYNAMIC_ENTITY__OBJECT:
        return object != null && !object.isEmpty();
      case GamePackage.DYNAMIC_ENTITY__BEHAVIOUR:
        return behaviour != null && !behaviour.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (entityid: ");
    result.append(entityid);
    result.append(')');
    return result.toString();
  }

} //DynamicEntityImpl
