/**
 * generated by Xtext 2.10.0
 */
package master.mdsd.game.impl;

import master.mdsd.game.CharType;
import master.mdsd.game.GamePackage;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Char Type</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link master.mdsd.game.impl.CharTypeImpl#getCharTypeId <em>Char Type Id</em>}</li>
 * </ul>
 *
 * @generated
 */
public class CharTypeImpl extends MinimalEObjectImpl.Container implements CharType
{
  /**
   * The default value of the '{@link #getCharTypeId() <em>Char Type Id</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCharTypeId()
   * @generated
   * @ordered
   */
  protected static final String CHAR_TYPE_ID_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getCharTypeId() <em>Char Type Id</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCharTypeId()
   * @generated
   * @ordered
   */
  protected String charTypeId = CHAR_TYPE_ID_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected CharTypeImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return GamePackage.Literals.CHAR_TYPE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getCharTypeId()
  {
    return charTypeId;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setCharTypeId(String newCharTypeId)
  {
    String oldCharTypeId = charTypeId;
    charTypeId = newCharTypeId;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GamePackage.CHAR_TYPE__CHAR_TYPE_ID, oldCharTypeId, charTypeId));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case GamePackage.CHAR_TYPE__CHAR_TYPE_ID:
        return getCharTypeId();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case GamePackage.CHAR_TYPE__CHAR_TYPE_ID:
        setCharTypeId((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case GamePackage.CHAR_TYPE__CHAR_TYPE_ID:
        setCharTypeId(CHAR_TYPE_ID_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case GamePackage.CHAR_TYPE__CHAR_TYPE_ID:
        return CHAR_TYPE_ID_EDEFAULT == null ? charTypeId != null : !CHAR_TYPE_ID_EDEFAULT.equals(charTypeId);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (charTypeId: ");
    result.append(charTypeId);
    result.append(')');
    return result.toString();
  }

} //CharTypeImpl
