/**
 * generated by Xtext 2.10.0
 */
package master.mdsd.game.impl;

import master.mdsd.game.CompOperator;
import master.mdsd.game.GamePackage;
import master.mdsd.game.IntAtt;
import master.mdsd.game.LogicOperatorLoop;
import master.mdsd.game.ReferenceCharacter;
import master.mdsd.game.RuleSetup;
import master.mdsd.game.RuleType;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Rule Setup</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link master.mdsd.game.impl.RuleSetupImpl#getAttributeRefLeft <em>Attribute Ref Left</em>}</li>
 *   <li>{@link master.mdsd.game.impl.RuleSetupImpl#getRuleType <em>Rule Type</em>}</li>
 *   <li>{@link master.mdsd.game.impl.RuleSetupImpl#getOperator <em>Operator</em>}</li>
 *   <li>{@link master.mdsd.game.impl.RuleSetupImpl#getIntAttleft <em>Int Attleft</em>}</li>
 *   <li>{@link master.mdsd.game.impl.RuleSetupImpl#getLo <em>Lo</em>}</li>
 * </ul>
 *
 * @generated
 */
public class RuleSetupImpl extends MinimalEObjectImpl.Container implements RuleSetup
{
  /**
   * The cached value of the '{@link #getAttributeRefLeft() <em>Attribute Ref Left</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAttributeRefLeft()
   * @generated
   * @ordered
   */
  protected ReferenceCharacter attributeRefLeft;

  /**
   * The cached value of the '{@link #getRuleType() <em>Rule Type</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRuleType()
   * @generated
   * @ordered
   */
  protected RuleType ruleType;

  /**
   * The cached value of the '{@link #getOperator() <em>Operator</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOperator()
   * @generated
   * @ordered
   */
  protected CompOperator operator;

  /**
   * The cached value of the '{@link #getIntAttleft() <em>Int Attleft</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIntAttleft()
   * @generated
   * @ordered
   */
  protected IntAtt intAttleft;

  /**
   * The cached value of the '{@link #getLo() <em>Lo</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLo()
   * @generated
   * @ordered
   */
  protected LogicOperatorLoop lo;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected RuleSetupImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return GamePackage.Literals.RULE_SETUP;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ReferenceCharacter getAttributeRefLeft()
  {
    return attributeRefLeft;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetAttributeRefLeft(ReferenceCharacter newAttributeRefLeft, NotificationChain msgs)
  {
    ReferenceCharacter oldAttributeRefLeft = attributeRefLeft;
    attributeRefLeft = newAttributeRefLeft;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GamePackage.RULE_SETUP__ATTRIBUTE_REF_LEFT, oldAttributeRefLeft, newAttributeRefLeft);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setAttributeRefLeft(ReferenceCharacter newAttributeRefLeft)
  {
    if (newAttributeRefLeft != attributeRefLeft)
    {
      NotificationChain msgs = null;
      if (attributeRefLeft != null)
        msgs = ((InternalEObject)attributeRefLeft).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GamePackage.RULE_SETUP__ATTRIBUTE_REF_LEFT, null, msgs);
      if (newAttributeRefLeft != null)
        msgs = ((InternalEObject)newAttributeRefLeft).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GamePackage.RULE_SETUP__ATTRIBUTE_REF_LEFT, null, msgs);
      msgs = basicSetAttributeRefLeft(newAttributeRefLeft, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GamePackage.RULE_SETUP__ATTRIBUTE_REF_LEFT, newAttributeRefLeft, newAttributeRefLeft));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public RuleType getRuleType()
  {
    return ruleType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetRuleType(RuleType newRuleType, NotificationChain msgs)
  {
    RuleType oldRuleType = ruleType;
    ruleType = newRuleType;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GamePackage.RULE_SETUP__RULE_TYPE, oldRuleType, newRuleType);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setRuleType(RuleType newRuleType)
  {
    if (newRuleType != ruleType)
    {
      NotificationChain msgs = null;
      if (ruleType != null)
        msgs = ((InternalEObject)ruleType).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GamePackage.RULE_SETUP__RULE_TYPE, null, msgs);
      if (newRuleType != null)
        msgs = ((InternalEObject)newRuleType).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GamePackage.RULE_SETUP__RULE_TYPE, null, msgs);
      msgs = basicSetRuleType(newRuleType, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GamePackage.RULE_SETUP__RULE_TYPE, newRuleType, newRuleType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public CompOperator getOperator()
  {
    return operator;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetOperator(CompOperator newOperator, NotificationChain msgs)
  {
    CompOperator oldOperator = operator;
    operator = newOperator;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GamePackage.RULE_SETUP__OPERATOR, oldOperator, newOperator);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setOperator(CompOperator newOperator)
  {
    if (newOperator != operator)
    {
      NotificationChain msgs = null;
      if (operator != null)
        msgs = ((InternalEObject)operator).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GamePackage.RULE_SETUP__OPERATOR, null, msgs);
      if (newOperator != null)
        msgs = ((InternalEObject)newOperator).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GamePackage.RULE_SETUP__OPERATOR, null, msgs);
      msgs = basicSetOperator(newOperator, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GamePackage.RULE_SETUP__OPERATOR, newOperator, newOperator));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public IntAtt getIntAttleft()
  {
    return intAttleft;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetIntAttleft(IntAtt newIntAttleft, NotificationChain msgs)
  {
    IntAtt oldIntAttleft = intAttleft;
    intAttleft = newIntAttleft;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GamePackage.RULE_SETUP__INT_ATTLEFT, oldIntAttleft, newIntAttleft);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setIntAttleft(IntAtt newIntAttleft)
  {
    if (newIntAttleft != intAttleft)
    {
      NotificationChain msgs = null;
      if (intAttleft != null)
        msgs = ((InternalEObject)intAttleft).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GamePackage.RULE_SETUP__INT_ATTLEFT, null, msgs);
      if (newIntAttleft != null)
        msgs = ((InternalEObject)newIntAttleft).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GamePackage.RULE_SETUP__INT_ATTLEFT, null, msgs);
      msgs = basicSetIntAttleft(newIntAttleft, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GamePackage.RULE_SETUP__INT_ATTLEFT, newIntAttleft, newIntAttleft));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public LogicOperatorLoop getLo()
  {
    return lo;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetLo(LogicOperatorLoop newLo, NotificationChain msgs)
  {
    LogicOperatorLoop oldLo = lo;
    lo = newLo;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GamePackage.RULE_SETUP__LO, oldLo, newLo);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setLo(LogicOperatorLoop newLo)
  {
    if (newLo != lo)
    {
      NotificationChain msgs = null;
      if (lo != null)
        msgs = ((InternalEObject)lo).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GamePackage.RULE_SETUP__LO, null, msgs);
      if (newLo != null)
        msgs = ((InternalEObject)newLo).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GamePackage.RULE_SETUP__LO, null, msgs);
      msgs = basicSetLo(newLo, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GamePackage.RULE_SETUP__LO, newLo, newLo));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case GamePackage.RULE_SETUP__ATTRIBUTE_REF_LEFT:
        return basicSetAttributeRefLeft(null, msgs);
      case GamePackage.RULE_SETUP__RULE_TYPE:
        return basicSetRuleType(null, msgs);
      case GamePackage.RULE_SETUP__OPERATOR:
        return basicSetOperator(null, msgs);
      case GamePackage.RULE_SETUP__INT_ATTLEFT:
        return basicSetIntAttleft(null, msgs);
      case GamePackage.RULE_SETUP__LO:
        return basicSetLo(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case GamePackage.RULE_SETUP__ATTRIBUTE_REF_LEFT:
        return getAttributeRefLeft();
      case GamePackage.RULE_SETUP__RULE_TYPE:
        return getRuleType();
      case GamePackage.RULE_SETUP__OPERATOR:
        return getOperator();
      case GamePackage.RULE_SETUP__INT_ATTLEFT:
        return getIntAttleft();
      case GamePackage.RULE_SETUP__LO:
        return getLo();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case GamePackage.RULE_SETUP__ATTRIBUTE_REF_LEFT:
        setAttributeRefLeft((ReferenceCharacter)newValue);
        return;
      case GamePackage.RULE_SETUP__RULE_TYPE:
        setRuleType((RuleType)newValue);
        return;
      case GamePackage.RULE_SETUP__OPERATOR:
        setOperator((CompOperator)newValue);
        return;
      case GamePackage.RULE_SETUP__INT_ATTLEFT:
        setIntAttleft((IntAtt)newValue);
        return;
      case GamePackage.RULE_SETUP__LO:
        setLo((LogicOperatorLoop)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case GamePackage.RULE_SETUP__ATTRIBUTE_REF_LEFT:
        setAttributeRefLeft((ReferenceCharacter)null);
        return;
      case GamePackage.RULE_SETUP__RULE_TYPE:
        setRuleType((RuleType)null);
        return;
      case GamePackage.RULE_SETUP__OPERATOR:
        setOperator((CompOperator)null);
        return;
      case GamePackage.RULE_SETUP__INT_ATTLEFT:
        setIntAttleft((IntAtt)null);
        return;
      case GamePackage.RULE_SETUP__LO:
        setLo((LogicOperatorLoop)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case GamePackage.RULE_SETUP__ATTRIBUTE_REF_LEFT:
        return attributeRefLeft != null;
      case GamePackage.RULE_SETUP__RULE_TYPE:
        return ruleType != null;
      case GamePackage.RULE_SETUP__OPERATOR:
        return operator != null;
      case GamePackage.RULE_SETUP__INT_ATTLEFT:
        return intAttleft != null;
      case GamePackage.RULE_SETUP__LO:
        return lo != null;
    }
    return super.eIsSet(featureID);
  }

} //RuleSetupImpl
