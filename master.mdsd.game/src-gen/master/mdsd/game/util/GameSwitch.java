/**
 * generated by Xtext 2.10.0
 */
package master.mdsd.game.util;

import master.mdsd.game.A;
import master.mdsd.game.Action;
import master.mdsd.game.Ammo;
import master.mdsd.game.AttS;
import master.mdsd.game.Attack;
import master.mdsd.game.Attribute;
import master.mdsd.game.AttributeAttack;
import master.mdsd.game.AttributeInitializer;
import master.mdsd.game.AttributeTypeAttack;
import master.mdsd.game.Behaviour;
import master.mdsd.game.BooleanExpression;
import master.mdsd.game.Bullet;
import master.mdsd.game.CharDec;
import master.mdsd.game.CharType;
import master.mdsd.game.CharacterAttr;
import master.mdsd.game.CompOperator;
import master.mdsd.game.Condition;
import master.mdsd.game.D;
import master.mdsd.game.DynamicEntity;
import master.mdsd.game.EQ;
import master.mdsd.game.Entity;
import master.mdsd.game.Expression;
import master.mdsd.game.GT;
import master.mdsd.game.GTE;
import master.mdsd.game.GameMap;
import master.mdsd.game.GamePackage;
import master.mdsd.game.Initializer;
import master.mdsd.game.IntLiteral;
import master.mdsd.game.LT;
import master.mdsd.game.LTE;
import master.mdsd.game.Location;
import master.mdsd.game.LogicOperator;
import master.mdsd.game.M;
import master.mdsd.game.Model;
import master.mdsd.game.Operation;
import master.mdsd.game.Pathfinding;
import master.mdsd.game.ReferenceCharacter;
import master.mdsd.game.StaticEntity;
import master.mdsd.game.T;
import master.mdsd.game.TargetRef;
import master.mdsd.game.Type;
import master.mdsd.game.VECTOR;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.Switch;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see master.mdsd.game.GamePackage
 * @generated
 */
public class GameSwitch<T1> extends Switch<T1>
{
  /**
   * The cached model package
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static GamePackage modelPackage;

  /**
   * Creates an instance of the switch.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public GameSwitch()
  {
    if (modelPackage == null)
    {
      modelPackage = GamePackage.eINSTANCE;
    }
  }

  /**
   * Checks whether this is a switch for the given package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param ePackage the package in question.
   * @return whether this is a switch for the given package.
   * @generated
   */
  @Override
  protected boolean isSwitchFor(EPackage ePackage)
  {
    return ePackage == modelPackage;
  }

  /**
   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the first non-null result returned by a <code>caseXXX</code> call.
   * @generated
   */
  @Override
  protected T1 doSwitch(int classifierID, EObject theEObject)
  {
    switch (classifierID)
    {
      case GamePackage.MODEL:
      {
        Model model = (Model)theEObject;
        T1 result = caseModel(model);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GamePackage.GAME_MAP:
      {
        GameMap gameMap = (GameMap)theEObject;
        T1 result = caseGameMap(gameMap);
        if (result == null) result = caseStaticEntity(gameMap);
        if (result == null) result = caseEntity(gameMap);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GamePackage.ATTRIBUTE:
      {
        Attribute attribute = (Attribute)theEObject;
        T1 result = caseAttribute(attribute);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GamePackage.ENTITY:
      {
        Entity entity = (Entity)theEObject;
        T1 result = caseEntity(entity);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GamePackage.DYNAMIC_ENTITY:
      {
        DynamicEntity dynamicEntity = (DynamicEntity)theEObject;
        T1 result = caseDynamicEntity(dynamicEntity);
        if (result == null) result = caseEntity(dynamicEntity);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GamePackage.STATIC_ENTITY:
      {
        StaticEntity staticEntity = (StaticEntity)theEObject;
        T1 result = caseStaticEntity(staticEntity);
        if (result == null) result = caseEntity(staticEntity);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GamePackage.CHARACTER:
      {
        master.mdsd.game.Character character = (master.mdsd.game.Character)theEObject;
        T1 result = caseCharacter(character);
        if (result == null) result = caseDynamicEntity(character);
        if (result == null) result = caseEntity(character);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GamePackage.TYPE:
      {
        Type type = (Type)theEObject;
        T1 result = caseType(type);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GamePackage.VECTOR:
      {
        VECTOR vector = (VECTOR)theEObject;
        T1 result = caseVECTOR(vector);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GamePackage.CHAR_TYPE:
      {
        CharType charType = (CharType)theEObject;
        T1 result = caseCharType(charType);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GamePackage.OBJECT:
      {
        master.mdsd.game.Object object = (master.mdsd.game.Object)theEObject;
        T1 result = caseObject(object);
        if (result == null) result = caseDynamicEntity(object);
        if (result == null) result = caseEntity(object);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GamePackage.BEHAVIOUR:
      {
        Behaviour behaviour = (Behaviour)theEObject;
        T1 result = caseBehaviour(behaviour);
        if (result == null) result = caseDynamicEntity(behaviour);
        if (result == null) result = caseEntity(behaviour);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GamePackage.PATHFINDING:
      {
        Pathfinding pathfinding = (Pathfinding)theEObject;
        T1 result = casePathfinding(pathfinding);
        if (result == null) result = caseBehaviour(pathfinding);
        if (result == null) result = caseDynamicEntity(pathfinding);
        if (result == null) result = caseEntity(pathfinding);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GamePackage.BOOLEAN_EXPRESSION:
      {
        BooleanExpression booleanExpression = (BooleanExpression)theEObject;
        T1 result = caseBooleanExpression(booleanExpression);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GamePackage.EXPRESSION:
      {
        Expression expression = (Expression)theEObject;
        T1 result = caseExpression(expression);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GamePackage.CONDITION:
      {
        Condition condition = (Condition)theEObject;
        T1 result = caseCondition(condition);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GamePackage.REFERENCE_CHARACTER:
      {
        ReferenceCharacter referenceCharacter = (ReferenceCharacter)theEObject;
        T1 result = caseReferenceCharacter(referenceCharacter);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GamePackage.COMP_OPERATOR:
      {
        CompOperator compOperator = (CompOperator)theEObject;
        T1 result = caseCompOperator(compOperator);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GamePackage.ACTION:
      {
        Action action = (Action)theEObject;
        T1 result = caseAction(action);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GamePackage.CHAR_DEC:
      {
        CharDec charDec = (CharDec)theEObject;
        T1 result = caseCharDec(charDec);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GamePackage.CHARACTER_ATTR:
      {
        CharacterAttr characterAttr = (CharacterAttr)theEObject;
        T1 result = caseCharacterAttr(characterAttr);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GamePackage.LOGIC_OPERATOR:
      {
        LogicOperator logicOperator = (LogicOperator)theEObject;
        T1 result = caseLogicOperator(logicOperator);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GamePackage.ATTACK:
      {
        Attack attack = (Attack)theEObject;
        T1 result = caseAttack(attack);
        if (result == null) result = caseBehaviour(attack);
        if (result == null) result = caseDynamicEntity(attack);
        if (result == null) result = caseEntity(attack);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GamePackage.ATTRIBUTE_ATTACK:
      {
        AttributeAttack attributeAttack = (AttributeAttack)theEObject;
        T1 result = caseAttributeAttack(attributeAttack);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GamePackage.ATTRIBUTE_TYPE_ATTACK:
      {
        AttributeTypeAttack attributeTypeAttack = (AttributeTypeAttack)theEObject;
        T1 result = caseAttributeTypeAttack(attributeTypeAttack);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GamePackage.BULLET:
      {
        Bullet bullet = (Bullet)theEObject;
        T1 result = caseBullet(bullet);
        if (result == null) result = caseBehaviour(bullet);
        if (result == null) result = caseAttributeTypeAttack(bullet);
        if (result == null) result = caseDynamicEntity(bullet);
        if (result == null) result = caseEntity(bullet);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GamePackage.INITIALIZER:
      {
        Initializer initializer = (Initializer)theEObject;
        T1 result = caseInitializer(initializer);
        if (result == null) result = caseStaticEntity(initializer);
        if (result == null) result = caseEntity(initializer);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GamePackage.ATTRIBUTE_INITIALIZER:
      {
        AttributeInitializer attributeInitializer = (AttributeInitializer)theEObject;
        T1 result = caseAttributeInitializer(attributeInitializer);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GamePackage.TARGET_REF:
      {
        TargetRef targetRef = (TargetRef)theEObject;
        T1 result = caseTargetRef(targetRef);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GamePackage.LOCATION:
      {
        Location location = (Location)theEObject;
        T1 result = caseLocation(location);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GamePackage.OPERATION:
      {
        Operation operation = (Operation)theEObject;
        T1 result = caseOperation(operation);
        if (result == null) result = caseExpression(operation);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GamePackage.INT_LITERAL:
      {
        IntLiteral intLiteral = (IntLiteral)theEObject;
        T1 result = caseIntLiteral(intLiteral);
        if (result == null) result = caseExpression(intLiteral);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GamePackage.LT:
      {
        LT lt = (LT)theEObject;
        T1 result = caseLT(lt);
        if (result == null) result = caseCompOperator(lt);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GamePackage.GT:
      {
        GT gt = (GT)theEObject;
        T1 result = caseGT(gt);
        if (result == null) result = caseCompOperator(gt);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GamePackage.LTE:
      {
        LTE lte = (LTE)theEObject;
        T1 result = caseLTE(lte);
        if (result == null) result = caseCompOperator(lte);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GamePackage.GTE:
      {
        GTE gte = (GTE)theEObject;
        T1 result = caseGTE(gte);
        if (result == null) result = caseCompOperator(gte);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GamePackage.EQ:
      {
        EQ eq = (EQ)theEObject;
        T1 result = caseEQ(eq);
        if (result == null) result = caseCompOperator(eq);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GamePackage.T:
      {
        T t = (T)theEObject;
        T1 result = caseT(t);
        if (result == null) result = caseLogicOperator(t);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GamePackage.A:
      {
        A a = (A)theEObject;
        T1 result = caseA(a);
        if (result == null) result = caseLogicOperator(a);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GamePackage.M:
      {
        M m = (M)theEObject;
        T1 result = caseM(m);
        if (result == null) result = caseLogicOperator(m);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GamePackage.D:
      {
        D d = (D)theEObject;
        T1 result = caseD(d);
        if (result == null) result = caseLogicOperator(d);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GamePackage.AMMO:
      {
        Ammo ammo = (Ammo)theEObject;
        T1 result = caseAmmo(ammo);
        if (result == null) result = caseAttributeTypeAttack(ammo);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GamePackage.ATT_S:
      {
        AttS attS = (AttS)theEObject;
        T1 result = caseAttS(attS);
        if (result == null) result = caseAttributeTypeAttack(attS);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      default: return defaultCase(theEObject);
    }
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Model</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Model</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T1 caseModel(Model object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Map</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Map</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T1 caseGameMap(GameMap object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Attribute</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Attribute</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T1 caseAttribute(Attribute object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Entity</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Entity</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T1 caseEntity(Entity object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Dynamic Entity</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Dynamic Entity</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T1 caseDynamicEntity(DynamicEntity object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Static Entity</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Static Entity</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T1 caseStaticEntity(StaticEntity object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Character</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Character</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T1 caseCharacter(master.mdsd.game.Character object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Type</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Type</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T1 caseType(Type object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>VECTOR</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>VECTOR</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T1 caseVECTOR(VECTOR object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Char Type</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Char Type</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T1 caseCharType(CharType object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Object</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Object</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T1 caseObject(master.mdsd.game.Object object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Behaviour</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Behaviour</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T1 caseBehaviour(Behaviour object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Pathfinding</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Pathfinding</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T1 casePathfinding(Pathfinding object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Boolean Expression</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Boolean Expression</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T1 caseBooleanExpression(BooleanExpression object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Expression</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Expression</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T1 caseExpression(Expression object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Condition</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Condition</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T1 caseCondition(Condition object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Reference Character</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Reference Character</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T1 caseReferenceCharacter(ReferenceCharacter object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Comp Operator</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Comp Operator</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T1 caseCompOperator(CompOperator object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Action</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Action</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T1 caseAction(Action object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Char Dec</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Char Dec</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T1 caseCharDec(CharDec object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Character Attr</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Character Attr</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T1 caseCharacterAttr(CharacterAttr object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Logic Operator</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Logic Operator</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T1 caseLogicOperator(LogicOperator object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Attack</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Attack</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T1 caseAttack(Attack object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Attribute Attack</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Attribute Attack</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T1 caseAttributeAttack(AttributeAttack object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Attribute Type Attack</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Attribute Type Attack</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T1 caseAttributeTypeAttack(AttributeTypeAttack object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Bullet</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Bullet</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T1 caseBullet(Bullet object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Initializer</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Initializer</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T1 caseInitializer(Initializer object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Attribute Initializer</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Attribute Initializer</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T1 caseAttributeInitializer(AttributeInitializer object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Target Ref</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Target Ref</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T1 caseTargetRef(TargetRef object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Location</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Location</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T1 caseLocation(Location object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Operation</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Operation</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T1 caseOperation(Operation object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Int Literal</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Int Literal</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T1 caseIntLiteral(IntLiteral object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>LT</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>LT</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T1 caseLT(LT object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>GT</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>GT</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T1 caseGT(GT object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>LTE</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>LTE</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T1 caseLTE(LTE object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>GTE</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>GTE</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T1 caseGTE(GTE object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EQ</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EQ</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T1 caseEQ(EQ object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>T</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>T</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T1 caseT(T object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>A</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>A</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T1 caseA(A object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>M</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>M</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T1 caseM(M object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>D</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>D</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T1 caseD(D object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Ammo</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Ammo</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T1 caseAmmo(Ammo object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Att S</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Att S</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T1 caseAttS(AttS object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch, but this is the last case anyway.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject)
   * @generated
   */
  @Override
  public T1 defaultCase(EObject object)
  {
    return null;
  }

} //GameSwitch
